name: CI/CD - Weather API to EKS (Prod)

on:
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - Dockerfile
      - .github/workflows/deploy-eks.yml

env:
  IMAGE_NAME: weather-api

jobs:
  build-and-push:
    name: Build & Push to ECR
    runs-on: ubuntu-latest
    environment: prod

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}:latest
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    name: Deploy to EKS with Helm
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: prod

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Extract Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG_FILE }}" | base64 -d > kubeconfig
        export KUBECONFIG=$PWD/kubeconfig

    - name: Set KUBECONFIG for job
      run: echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV

    - name: Install Helm
      uses: azure/setup-helm@v3

    - name: Helm Deploy to EKS
      run: |
        helm upgrade --install weather ./weather-chart -f weather-chart/values-prod.yaml
