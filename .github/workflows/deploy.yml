name: CI/CD - Build, Push, Deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: weather-api

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    name: Build and Push to ECR

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Debug Region
      run: echo "Region is ${{ secrets.AWS_REGION }}"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
        docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build and Push Docker Image
      run: |
        IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}
        docker build -t $IMAGE_URI:latest .
        docker tag $IMAGE_URI:latest $IMAGE_URI:${{ github.sha }}
        docker push $IMAGE_URI:latest
        docker push $IMAGE_URI:${{ github.sha }}

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
    - name: SSH and Deploy
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ec2-user
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin $IMAGE_URI
          docker stop weather-api || true && docker rm weather-api || true
          docker pull $IMAGE_URI:latest
          docker run -d -p 8000:8000 --name weather-api -e API_KEY=${{ secrets.API_KEY }} $IMAGE_URI:latest
